                         TOOLS DIRECTORY README

LINE TERMINATORS
  These  scripts were originally developed and executed on Windows using
  ActiveState Perl 5.8 under WinXP (SP2).  To use under Linux, cygwin or
  other  unix  variant, the batch scripts will have to converted to some
  unix-style shell script.  This should be trival as the  batch  scripts
  are very straight forward.

  When  running on Unix it would be wise to run all the scripts and data
  file through "dos2unix" before running these scripts. Under CVS, these
  files  are  stored  with  "unix" line terminators under the assumption
  that Windows users will be using WinCVS  with  atuo  unix-to-dos  line
  translation turned on.  If you are using CVS on Windows using the com-
  mand-line interface, you may need to run "unix2dos" to do this manual-
  ly.   If you are doing all this under cygwin, then leave everything in
  "unix" line-terminator format.

node_ids_lg.bat, node_ids.pl
  Usage: node_ids_lg.bat > node_ids_lg.txt

  Creates a list of node ids.  The two scripts need to be placed in  the
  "burkeweb-{date}" directory where the appropriate "newXML" subdirecto-
  ry exists. The "newXML" is not provided for LG due  to  copyright  re-
  strictions.  This list needs to be pasted into the gml_edges_lg.pl and
  gml_nodes_lg.pl, And, is also used in modified form in  create_EdgeDa-
  ta.pl and create_NodeData.pl.  Anyway, if there are any changes in the
  "newXML" node set that need to be picked up for LG, this  script  must
  be  updated,  rerun,  and  the  results  patched  into  the other Perl
  scripts.  Otherwise, this script should be ignored.

gml_lg.bat, gml_nodes_lg.{bat,pl}, gml_edges_lg.{bat,pl}
  Usage: gml_lg.bat > lg_inp.gml

  Parses all the XML nodes in "newXML" and creates  a  GML  (Graph  Meta
  Language) file with all the nodes and edges defined suitable for input
  into  GraphAEL.   These   scripts   need   to   be   placed   in   the
  "burkeweb-{date}" directory where the appropriate "newXML" subdirecto-
  ry exists.  The "newXML" contents are not provided for LG due to copy-
  right  restrictions.   The  GML input file also includes x,y,z coordi-
  nates but these are ignored by GraphAEL and are replaced by  the  real
  coordinates  in  the output GML.  The lg_imp.gml can be used as a sub-
  stitute for real layout when GraphAEL GML  output  is  not  available.
  However,  the  coordinates  generated  by  this  script are random and
  should only be used for testing.

create_EdgeData.pl
  Usage: create_EdgeData.pl lg_{inp,out}.gml

  Generates the EdgeData.java class from the lg_out.gml generated by the
  GraphAEL  GMLwriter.  Run  this only if the KWeb graph itself changes.
  If only the layout changes then there's no need to rerun this  script.
  Doesn't matter whether you run this using lg_inp.gml or lg_out.gml.

create_NodeData.pl
  Usage: create_NodeData.pl lg_{inp,out}.gml

  Generates the NodeData.java class from the lg_out.gml generated by the
  GraphAEL GMLwriter.  Run this each time the graph  layout  changes  in
  order to get any layout changes incorporated into the LG demo applica-
  tion.  (If GraphAEL isn't available, you can use  lg_inp.gml  but  the
  layout will be completely random and useful only for preliminary test-
  ing.)

