use Math::Trig ':radial';

if ($#ARGV != 0)
  {
    print "Usage: $0 ...something\n";
    exit(1);
  }

$infile = $ARGV[0];
$outfile = "FixNodePosData.java";
open(IN, "$infile") || die "cannot open IN\n";
open(OUT, ">$outfile") || die "cannot open OUT\n";

@line = <IN>;
close (IN);

$count = -1;
$newNode = 0;
$nodeId = "-1";
$nodeTheta = 0;
$nodePhi = 0;

# I know I should be using here documents for long runs of text but I'm too
# lazy to look up the Perl syntax right now. 

print OUT "/*\n";
print OUT " * \$Header: /zpool01/javanet/scm/svn/tmp/cvs2svn/lg3d-incubator/src/classes/org/jdesktop/lg3d/apps/kwebdemo1/tools/create_FixNodePosData.pl,v 1.2 2005-06-24 19:57:15 paulby Exp $\n";
print OUT " * \$Date: 2005-06-24 19:57:15 $\n";
print OUT " *\n";
print OUT " * Joint Copyright (c) 2005 by\n";
print OUT " *   James A. Zaun, Consultant,\n";
print OUT " *   The Burke Institute,\n";
print OUT " *   Sun Microsystems, Inc.\n";
print OUT " * ALL RIGHTS RESERVED.\n";
print OUT " *\n";
print OUT " * The contents of this file are subject to the GNU General Public\n";
print OUT " * License, Version 2 (the \"License\"); you may not use this file\n";
print OUT " * except in compliance with the License. A copy of the License is\n";
print OUT " * available at http://www.opensource.org/licenses/gpl-license.php.\n";
print OUT " */\n";
print OUT "\n";
print OUT "package org.jdesktop.lg3d.apps.kwebdemo1.singletons;\n";
print OUT "\n";
print OUT "import java.util.Hashtable;\n";
print OUT "\n";
print OUT "import org.jdesktop.lg3d.apps.kwebdemo1.nodes.*;\n";
print OUT "\n";
print OUT "\n";
print OUT "/**\n";
print OUT " * James Burke's Knowledge Web graph node position data.\n";
print OUT " * \n";
print OUT " * <p style=\"color: red; font-weight: bold\">Note: This class is autogenerated\n";
print OUT " * from a Perl 5.8 script, <code>create_FixNodePosData.pl</code> located in the\n";
print OUT " * <code>tools</code> subdirectory.  DO NOT EDIT THIS CODE DIRECTLY.</p>\n";
print OUT " * \n";
print OUT " * <p>This class is generated from the GraphAEL GMLWriter output. This class\n";
print OUT " * fixes the data in {\@link NodeData NodeData} by replacing the postion info\n";
print OUT " * with the actual Spherical (theta/phi) layout node positions computed by GraphAEL.\n";
print OUT " * </p>\n";
print OUT " * \n";
print OUT " * <p>This class must be initialized after the {\@link NodeData NodeData}\n";
print OUT " * class which contains the all other graph details.\n";
print OUT " * </p>\n";
print OUT " *\n";
print OUT " * \@author Jim Zaun &lt;jz-lg\@zaun.com&gt; (a.k.a. &lt;zaun\@acm.org&gt;)\n";
print OUT " * \@version \$Revision: 1.2 $\n";
print OUT " * \@since JDK 1.5.0, Java3D 1.4.0, lg3d-{core,demo,incubator} 0.7.0\n";
print OUT " */\n";
print OUT "public final class FixNodePosData\n";
print OUT "{\n";
print OUT "\n";
print OUT "  /**\n";
print OUT "   * This static method only fixes the position data in the NodeData class.\n";
print OUT "   * It was easier to do it this why than generate the correct data\n";
print OUT "   * from the <code>create_NodeData.pl</code> tool.\n";
print OUT "   * \@param nodeData instance of NodeData to be fixed.\n";
print OUT "   */\n";
print OUT "  static public void doit(NodeData nodeData)\n";
print OUT "  {\n";
print OUT "    BasicNode node = null;\n";

foreach $line (@line)
  {
    chomp($line);
    # chop($line); # get rid of the CR too -- ONLY CYGWIN
    if ($line =~ /^\s*node\s+\[/)
      {
        $count++;
        $newNode = 1;
      }
    if (($line =~ /^\s*id\s+\d+/) && $newNode)
      {
        ($nodeId) = ($line =~ /^\s*id\s+(\d+)/);
      }
    if (($line =~ /^\s*location\s+.*/) && $newNode)
      {
        ($nodeTheta, $nodePhi) = ($line =~ /^\s*location\s+\((.*),\s+(.*)\)/);
      }
    if (($line =~ /^\s*\]/) && $newNode)
      {
        print OUT "    node = nodeData.getNode($nodeId);\n";
        print OUT "    node.theta = $nodeTheta;\n";
        print OUT "    node.phi = $nodePhi;\n";
        $newNode = 0;
        $nodeId = "-1";
        $nodeTheta = 0;
        $nodePhi = 0;
      }
  }
print OUT "  }\n";
print OUT "\n";
print OUT "}\n";
close (OUT);
