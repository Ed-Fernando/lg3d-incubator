/*
 * $Header: /zpool01/javanet/scm/svn/tmp/cvs2svn/lg3d-incubator/src/classes/org/jdesktop/lg3d/apps/kwebdemo1/singletons/FixNodePosData.java,v 1.2 2005-06-24 19:57:14 paulby Exp $
 * $Date: 2005-06-24 19:57:14 $
 *
 * Joint Copyright (c) 2005 by
 *   James A. Zaun, Consultant,
 *   The Burke Institute,
 *   Sun Microsystems, Inc.
 * ALL RIGHTS RESERVED.
 *
 * The contents of this file are subject to the GNU General Public
 * License, Version 2 (the "License"); you may not use this file
 * except in compliance with the License. A copy of the License is
 * available at http://www.opensource.org/licenses/gpl-license.php.
 */

package org.jdesktop.lg3d.apps.kwebdemo1.singletons;

import org.jdesktop.lg3d.apps.kwebdemo1.nodes.*;


/**
 * James Burke's Knowledge Web graph node position data.
 * 
 * <p style="color: red; font-weight: bold">Note: This class is autogenerated
 * from a Perl 5.8 script, <code>create_FixNodePosData.pl</code> located in the
 * <code>tools</code> subdirectory.  DO NOT EDIT THIS CODE DIRECTLY.</p>
 * 
 * <p>This class is generated from the GraphAEL GMLWriter output. This class
 * fixes the data in {@link NodeData NodeData} by replacing the postion info
 * with the actual Spherical (theta/phi) layout node positions computed by GraphAEL.
 * </p>
 * 
 * <p>This class must be initialized after the {@link NodeData NodeData}
 * class which contains the all other graph details.
 * </p>
 *
 * @author Jim Zaun &lt;jz-lg@zaun.com&gt; (a.k.a. &lt;zaun@acm.org&gt;)
 * @version $Revision: 1.1.2.1 n * @since JDK 1.5.0, Java3D 1.4.0, lg3d-{core,demo,incubator} 0.7.0
 */
public final class FixNodePosData
{

  /**
   * This static method only fixes the position data in the NodeData class.
   * It was easier to do it this why than generate the correct data
   * from the <code>create_NodeData.pl</code> tool.
   * @param nodeData instance of NodeData to be fixed.
   */
  static public void doit(NodeData nodeData)
  {
    BasicNode node = null;
    node = nodeData.getNode(95);
    node.theta = 0.97472793885231;
    node.phi = 1.0133485067304753;
    node = nodeData.getNode(114);
    node.theta = 5.969286364432137;
    node.phi = 2.1300420443044006;
    node = nodeData.getNode(116);
    node.theta = 0.15056656176990846;
    node.phi = 2.1418396829180724;
    node = nodeData.getNode(126);
    node.theta = 4.902594442306687;
    node.phi = 2.2124679154559925;
    node = nodeData.getNode(182);
    node.theta = 2.087017935599983;
    node.phi = 1.483632044765578;
    node = nodeData.getNode(197);
    node.theta = 4.426760939582769;
    node.phi = 0.6185160415492048;
    node = nodeData.getNode(209);
    node.theta = 4.333807412604638;
    node.phi = 1.0983357597042926;
    node = nodeData.getNode(217);
    node.theta = 5.760695612877903;
    node.phi = 0.9560540041431791;
    node = nodeData.getNode(218);
    node.theta = 0.7223847711985514;
    node.phi = 0.660533119669158;
    node = nodeData.getNode(227);
    node.theta = 2.897659480373193;
    node.phi = 1.6248792449632414;
    node = nodeData.getNode(235);
    node.theta = 1.7905152588272055;
    node.phi = 1.3588527580096597;
    node = nodeData.getNode(254);
    node.theta = 3.9792203473642793;
    node.phi = 0.7461814450332732;
    node = nodeData.getNode(275);
    node.theta = 2.336864219699498;
    node.phi = 1.922081958332004;
    node = nodeData.getNode(309);
    node.theta = 4.3095425626177075;
    node.phi = 2.432307038345204;
    node = nodeData.getNode(379);
    node.theta = 0.8725919780800866;
    node.phi = 1.0692082521596933;
    node = nodeData.getNode(428);
    node.theta = 1.9323135346924638;
    node.phi = 1.8456320926914713;
    node = nodeData.getNode(444);
    node.theta = 5.511637239065499;
    node.phi = 2.4267915213068343;
    node = nodeData.getNode(445);
    node.theta = 3.1769203940574906;
    node.phi = 1.2882803983662765;
    node = nodeData.getNode(449);
    node.theta = 3.6064587281322167;
    node.phi = 1.6748594895218134;
    node = nodeData.getNode(450);
    node.theta = 2.5683654170490398;
    node.phi = 1.2088855101620113;
    node = nodeData.getNode(460);
    node.theta = 1.457635579405234;
    node.phi = 2.7571468695711325;
    node = nodeData.getNode(464);
    node.theta = 1.0279140748514033;
    node.phi = 0.8628798999729773;
    node = nodeData.getNode(516);
    node.theta = 5.575746249561037;
    node.phi = 1.8964595243089915;
    node = nodeData.getNode(518);
    node.theta = 5.782932533769366;
    node.phi = 2.051587957358869;
    node = nodeData.getNode(524);
    node.theta = 1.7203767896161486;
    node.phi = 1.266541367832827;
    node = nodeData.getNode(529);
    node.theta = 6.140188582392406;
    node.phi = 2.168380370331875;
    node = nodeData.getNode(531);
    node.theta = 3.9164536315155596;
    node.phi = 1.5437582941224877;
    node = nodeData.getNode(532);
    node.theta = 2.0517098720519686;
    node.phi = 0.3149973879106874;
    node = nodeData.getNode(533);
    node.theta = 4.899579147389062;
    node.phi = 2.1375687504442276;
    node = nodeData.getNode(545);
    node.theta = 0.4221730189064777;
    node.phi = 1.5453072943658939;
    node = nodeData.getNode(553);
    node.theta = 3.330820886336615;
    node.phi = 2.7293598396247476;
    node = nodeData.getNode(559);
    node.theta = 5.111798842040805;
    node.phi = 2.3411822487721534;
    node = nodeData.getNode(565);
    node.theta = 2.6605443555289523;
    node.phi = 2.139618654066675;
    node = nodeData.getNode(594);
    node.theta = 0.8490889883395965;
    node.phi = 1.9989496295632327;
    node = nodeData.getNode(609);
    node.theta = 0.32837521605853515;
    node.phi = 2.6241995473998996;
    node = nodeData.getNode(619);
    node.theta = 3.3205299767590377;
    node.phi = 2.108078906156874;
    node = nodeData.getNode(632);
    node.theta = 4.545255369357274;
    node.phi = 1.7673161255305145;
    node = nodeData.getNode(635);
    node.theta = 0.26283411087346586;
    node.phi = 1.2468613875215997;
    node = nodeData.getNode(637);
    node.theta = 1.826511334861999;
    node.phi = 2.4488373361089306;
    node = nodeData.getNode(638);
    node.theta = 3.668902713609744;
    node.phi = 1.245589038056314;
    node = nodeData.getNode(684);
    node.theta = 3.584216733668868;
    node.phi = 2.002466955193257;
    node = nodeData.getNode(689);
    node.theta = 5.156575639150283;
    node.phi = 1.281659580205687;
    node = nodeData.getNode(744);
    node.theta = 0.5878780072016524;
    node.phi = 2.0524430457788276;
    node = nodeData.getNode(748);
    node.theta = 4.835456820703129;
    node.phi = 3.039732287190036;
    node = nodeData.getNode(759);
    node.theta = 1.3244721502103851;
    node.phi = 2.6998799037022962;
    node = nodeData.getNode(787);
    node.theta = 4.273973906698207;
    node.phi = 0.5812887293564272;
    node = nodeData.getNode(788);
    node.theta = 2.317350459261699;
    node.phi = 1.6229223893507732;
    node = nodeData.getNode(789);
    node.theta = 3.2129814986762772;
    node.phi = 0.3791043087429388;
    node = nodeData.getNode(802);
    node.theta = 4.212597208022496;
    node.phi = 2.5866137397783833;
    node = nodeData.getNode(803);
    node.theta = 1.9759242246610031;
    node.phi = 0.17380365354727773;
    node = nodeData.getNode(804);
    node.theta = 1.292576213881974;
    node.phi = 3.010959658945604;
    node = nodeData.getNode(815);
    node.theta = 0.9838106522543059;
    node.phi = 2.2740124617295843;
    node = nodeData.getNode(855);
    node.theta = 6.269665677100208;
    node.phi = 1.6148362973427233;
    node = nodeData.getNode(858);
    node.theta = 3.4997328655815654;
    node.phi = 1.9118407134341144;
    node = nodeData.getNode(871);
    node.theta = 2.235555045151769;
    node.phi = 1.0085847926800537;
    node = nodeData.getNode(876);
    node.theta = 0.28915545571913337;
    node.phi = 2.273444340239248;
    node = nodeData.getNode(899);
    node.theta = 3.039105277523435;
    node.phi = 1.611484697222161;
    node = nodeData.getNode(959);
    node.theta = 2.0018435095827796;
    node.phi = 2.034981177435036;
    node = nodeData.getNode(963);
    node.theta = 1.8933702251960387;
    node.phi = 0.67907037441292;
    node = nodeData.getNode(970);
    node.theta = 4.308868002585324;
    node.phi = 0.5416049866005005;
    node = nodeData.getNode(981);
    node.theta = 4.104871346941654;
    node.phi = 2.048817354155556;
    node = nodeData.getNode(983);
    node.theta = 5.790870404703629;
    node.phi = 0.8387337516407645;
    node = nodeData.getNode(986);
    node.theta = 5.039624044593518;
    node.phi = 1.0554527458112015;
    node = nodeData.getNode(991);
    node.theta = 1.1214144430411588;
    node.phi = 2.508629903363621;
    node = nodeData.getNode(1001);
    node.theta = 3.427311668925636;
    node.phi = 1.9025000088696018;
    node = nodeData.getNode(1004);
    node.theta = 1.369015677871422;
    node.phi = 1.8390631471030612;
    node = nodeData.getNode(1038);
    node.theta = 1.7216738706155676;
    node.phi = 0.9885122846430232;
    node = nodeData.getNode(1039);
    node.theta = 5.2581887689564235;
    node.phi = 0.7569760898591218;
    node = nodeData.getNode(1048);
    node.theta = 1.4589825261211455;
    node.phi = 1.743440491128576;
    node = nodeData.getNode(1061);
    node.theta = 0.34530861735563795;
    node.phi = 2.4520822155001145;
    node = nodeData.getNode(1062);
    node.theta = 0.4454156382128729;
    node.phi = 0.3818065909982201;
    node = nodeData.getNode(1076);
    node.theta = 0.6023736167695373;
    node.phi = 1.1302973448949893;
    node = nodeData.getNode(1117);
    node.theta = 6.074829113859128;
    node.phi = 1.5254527235654047;
    node = nodeData.getNode(1168);
    node.theta = 6.245148854836705;
    node.phi = 2.8744766502374954;
    node = nodeData.getNode(1186);
    node.theta = 4.284559517450404;
    node.phi = 1.8044288814239506;
    node = nodeData.getNode(1199);
    node.theta = 1.1480253463794847;
    node.phi = 1.283016999251795;
    node = nodeData.getNode(1201);
    node.theta = 4.912403626909931;
    node.phi = 1.69473209708753;
    node = nodeData.getNode(1217);
    node.theta = 2.506057660206422;
    node.phi = 1.486290634254904;
    node = nodeData.getNode(1227);
    node.theta = 5.092768607062062;
    node.phi = 2.1375364373271726;
    node = nodeData.getNode(1241);
    node.theta = 1.1870152621936165;
    node.phi = 0.724562523301706;
    node = nodeData.getNode(1317);
    node.theta = 3.405885368512753;
    node.phi = 0.505068941059254;
    node = nodeData.getNode(1327);
    node.theta = 5.390422292481839;
    node.phi = 1.7643959539632301;
    node = nodeData.getNode(1350);
    node.theta = 3.2873382771573154;
    node.phi = 2.312578533721932;
    node = nodeData.getNode(1356);
    node.theta = 2.6795890685998613;
    node.phi = 2.407504959459401;
    node = nodeData.getNode(1357);
    node.theta = 3.0639741632144344;
    node.phi = 1.2822091842314065;
    node = nodeData.getNode(1358);
    node.theta = 3.9531918677285747;
    node.phi = 1.0030877231009123;
    node = nodeData.getNode(1361);
    node.theta = 2.2166497764077695;
    node.phi = 1.5476700578285787;
    node = nodeData.getNode(1363);
    node.theta = 0.3373934888390599;
    node.phi = 1.2340407742102948;
    node = nodeData.getNode(1364);
    node.theta = 1.2069451386963772;
    node.phi = 1.3612649436853115;
    node = nodeData.getNode(1365);
    node.theta = 2.9217516462626314;
    node.phi = 0.8544345456320377;
    node = nodeData.getNode(1383);
    node.theta = 2.024919911687027;
    node.phi = 2.8489050040606574;
    node = nodeData.getNode(1387);
    node.theta = 5.220700936368157;
    node.phi = 0.2212884484115198;
    node = nodeData.getNode(1429);
    node.theta = 5.655588153822689;
    node.phi = 0.41321445461503803;
    node = nodeData.getNode(1447);
    node.theta = 4.431009056415146;
    node.phi = 0.9282203554636406;
    node = nodeData.getNode(1464);
    node.theta = 6.122089410380004;
    node.phi = 1.3447946401895772;
    node = nodeData.getNode(1497);
    node.theta = 2.3874580270143806;
    node.phi = 0.744446715264392;
    node = nodeData.getNode(1505);
    node.theta = 0.8104911266789628;
    node.phi = 1.0222121342005197;
    node = nodeData.getNode(1517);
    node.theta = 2.251052306387348;
    node.phi = 1.0485174100394077;
    node = nodeData.getNode(1545);
    node.theta = 2.7117439944129638;
    node.phi = 1.964243239863971;
    node = nodeData.getNode(1546);
    node.theta = 2.5055740323280045;
    node.phi = 0.7183730008888207;
    node = nodeData.getNode(1548);
    node.theta = 4.809227932697363;
    node.phi = 1.4587866342868594;
    node = nodeData.getNode(1551);
    node.theta = 3.7630088587760153;
    node.phi = 2.145397205291413;
    node = nodeData.getNode(1553);
    node.theta = 5.434327814543169;
    node.phi = 2.5543730759290386;
    node = nodeData.getNode(1556);
    node.theta = 0.5376250989250274;
    node.phi = 2.1614579091721704;
    node = nodeData.getNode(1557);
    node.theta = 0.8136821838554757;
    node.phi = 1.4780714106076938;
    node = nodeData.getNode(1560);
    node.theta = 0.6678699320805569;
    node.phi = 1.8080124461519085;
    node = nodeData.getNode(1563);
    node.theta = 1.6171229732484826;
    node.phi = 0.5261788464049505;
    node = nodeData.getNode(1588);
    node.theta = 6.013910659798536;
    node.phi = 1.378389401591869;
    node = nodeData.getNode(1598);
    node.theta = 6.2343556336054675;
    node.phi = 0.6551888751262347;
    node = nodeData.getNode(1604);
    node.theta = 5.661003114063283;
    node.phi = 1.6442566230051998;
    node = nodeData.getNode(1607);
    node.theta = 5.232847342173903;
    node.phi = 2.858581503969855;
    node = nodeData.getNode(1614);
    node.theta = 0.17373122503255164;
    node.phi = 2.2482373635200825;
    node = nodeData.getNode(1648);
    node.theta = 3.505934361554475;
    node.phi = 0.7835667058282603;
    node = nodeData.getNode(1662);
    node.theta = 6.011471241613759;
    node.phi = 0.6020191246593356;
    node = nodeData.getNode(1664);
    node.theta = 4.8263701825593746;
    node.phi = 1.3535683008196817;
    node = nodeData.getNode(1689);
    node.theta = 4.377761801038461;
    node.phi = 2.168298945049639;
    node = nodeData.getNode(1712);
    node.theta = 4.854031636159404;
    node.phi = 2.5042886203861774;
    node = nodeData.getNode(1713);
    node.theta = 6.236878562782475;
    node.phi = 1.9785316081071298;
    node = nodeData.getNode(1730);
    node.theta = 0.528806187397257;
    node.phi = 1.4453249180342846;
    node = nodeData.getNode(1731);
    node.theta = 5.335792403081124;
    node.phi = 1.4993335863234092;
    node = nodeData.getNode(1738);
    node.theta = 3.8617015365508798;
    node.phi = 2.1646878245046777;
    node = nodeData.getNode(1743);
    node.theta = 2.285873841150247;
    node.phi = 0.8466847171982321;
    node = nodeData.getNode(1748);
    node.theta = 0.9288638229592714;
    node.phi = 2.7227723516005096;
    node = nodeData.getNode(1800);
    node.theta = 3.8237369125270924;
    node.phi = 2.5406188174734146;
    node = nodeData.getNode(1806);
    node.theta = 0.12481159945018058;
    node.phi = 0.7726702535374673;
  }

}
